namespace _4kyu_Codewars_style_ranking_system
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // TODO: Implement ranking system
        }
    }

    public class User
    {
        int[] generalRank = {-8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8 }; // общий ранг

        //int[] actRank = {-8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8 }; // ранг активности

        public int rank; // ранг пользователя
        public int progress; // прогресс 
        public void incProgress(int rank, int actRank, int progress) //ранг активности
        {
            for (int i = 0; i < generalRank.Length; i++)
            {
                for (int j = 0; j < actRank; i++)
                {
                    if (generalRank[i] == actRank)
                    {
                        progress += 3;
                    }

                }
            }
        }

      //  public void AssertRankProgression(int rank, )

    }
}


/*
 Перевод задачи:
Класс User для расчета прогресса пользователя в рейтинговой системе
Правила:
Пользователь начинает с ранга -8 и может повышаться до ранга 8.
Ранг 0 отсутствует. После -1 идет 1.
Пользователь выполняет активности, у которых тоже есть ранги.
При выполнении активности ранг пользователя может увеличиваться, а прогресс обновляется.
Прогресс рассчитывается относительно разницы между рангом пользователя и рангом активности.
Прогресс начинается с 0. Когда он достигает 100, пользователь повышается в ранге.
Если у пользователя после повышения остается "избыточный" прогресс, он переходит на следующий уровень.
Когда пользователь достигает ранга 8, он больше не может повышаться.
Допустимые ранги: -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8.
Любое значение ранга вне этого диапазона должно вызывать ошибку.
Как начисляются очки прогресса?
Если ранг активности совпадает с рангом пользователя → +3 очка.
Если активность на 1 уровень ниже ранга пользователя → +1 очко.
Если активность на 2 и более уровней ниже ранга пользователя → 0 очков.
Если активность выше ранга пользователя, то прогресс увеличивается по формуле:
прогресс=10×d×d
Где d — разница между рангом активности и рангом пользователя.
Примеры логики:
Если у пользователя ранг -8, и он выполняет активность ранга -7, он получает 10 очков.
Если у пользователя ранг -8, и он выполняет активность ранга -6, он получает 40 очков.
Если у пользователя ранг -8, и он выполняет активность ранга -5, он получает 90 очков.
Если у пользователя ранг -8, и он выполняет активность ранга -4, он получает 160 очков:
Ранг повышается до -7.
Остается 60 очков прогресса на следующий уровень.
Если у пользователя ранг -1, и он выполняет активность ранга 1, он получает 10 очков.
Пример использования в C#
csharp
Копировать
Редактировать
User user = new User();
user.rank;      // => -8
user.progress;  // => 0
user.incProgress(-7);
user.progress;  // => 10
user.incProgress(-5); // Добавляет 90 очков
user.progress;  // => 0 (достигнут 100, повысился в ранге)
user.rank;      // => -7 (ранг увеличился)
В C# некоторые методы могут вызывать ArgumentException при некорректных входных данных.*/